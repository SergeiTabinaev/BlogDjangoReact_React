[{"/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/index.js":"1","/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/App.js":"2","/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/reportWebVitals.js":"3","/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/components/Navigation/Navbar.js":"4","/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/components/Category/CategoryDetail.js":"5","/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/components/Posts/PostDetail.js":"6"},{"size":500,"mtime":1610632904697,"results":"7","hashOfConfig":"8"},{"size":747,"mtime":1610703467717,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610632904697,"results":"10","hashOfConfig":"8"},{"size":1527,"mtime":1610698450482,"results":"11","hashOfConfig":"8"},{"size":1232,"mtime":1610701845427,"results":"12","hashOfConfig":"8"},{"size":594,"mtime":1610703467525,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"8e7e9e",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/index.js",[],["29","30"],"/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/App.js",["31","32"],"/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/reportWebVitals.js",[],"/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/components/Navigation/Navbar.js",["33"],"import React, { useState, useEffect} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\n\nfunction Navbar() {\n\n    const[cats, setCats] = useState([])\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: \"/api/category/\"\n        }).then(response => {\n            setCats(response.data)\n        })\n    }, [])\n\n    return (\n        <div className=\"App\">\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                    <div className=\"navbar-nav\">\n\n                        {cats.map(c => (\n                                //     <a className=\"nav-link\" href=\"#\" key={c.id}>{c.name}</a>\n                                // ))}\n                        <Link className=\"nav-link\" to={{pathname: `/category/${c.id}/`, fromDashboard: false}}>{c.name}</Link>\n                        ))}\n\n                    </div>\n                </div>\n            </nav>\n        </div>\n    );\n}\n\nexport default Navbar;\n","/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/components/Category/CategoryDetail.js",["34"],"import React, {useState, useEffect} from 'react'\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\n\nfunction CategoryDetail( {match} ) {\n\n    const [category, setCategory] = useState({})\n    const [posts, setPosts] = useState([])\n    const id = match.params.id\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: `/api/category/${id}/`\n        }).then(response => {\n            setCategory(response.data)\n            setPosts(response.data.posts)\n        })\n        }, [id])\n\n        return(\n            <div>\n                Category with id {category.id}\n                <p>Category: <strong>{category.name}</strong></p>\n\n                <hr/>/category/2/\n                <div className=\"row\">\n                    {posts.map(p => {\n                        <div className=\"col-md-4\" key={p.id}>\n                            <h4>{p.title}</h4>\n                            <p>{p.content}</p>\n                            <p>{p.id}</p>\n                            <Link to={{pathname: `/post/${p.id}`, fromDashboard: false }}>Детали</Link>\n                        </div>\n                    })}\n                </div>\n\n            </div>\n        )\n}\n\nexport default CategoryDetail;\n","/home/user/PycharmProjects/BlogDjangoReact/blog/mainapp-ui/src/components/Posts/PostDetail.js",["35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":25},{"ruleId":"40","severity":1,"message":"44","line":1,"column":27,"nodeType":"42","messageId":"43","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"46","line":23,"column":17,"nodeType":"47","endLine":23,"endColumn":54},{"ruleId":"48","severity":1,"message":"49","line":29,"column":34,"nodeType":"50","messageId":"51","endLine":29,"endColumn":36},{"ruleId":"40","severity":1,"message":"52","line":3,"column":9,"nodeType":"42","messageId":"43","endLine":3,"endColumn":13},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]